using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Biblioteca.Negocio;
using Biblioteca.Classes_Basicas;

namespace FCTest.Negocio
{
    [TestClass]
    public class FornecedorNegocioUnitTest

    {
        private FornecedorNegocio fornecedorNegocio = new FornecedorNegocio();
        [TestMethod]
        public void TestMethod1()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Id = 1;

            Assert.IsTrue(fornecedorNegocio.ValidarId(fornecedor));
        }
        [TestMethod]
        public void TestMethod2()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.RazaoSocial = "Fab";

            Assert.IsTrue(fornecedorNegocio.ValidarRazaoSocial(fornecedor));
        }
        [TestMethod]
        public void TestMethod3()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Telefone = 32506547;

            Assert.IsTrue(fornecedorNegocio.ValidarTelefone(fornecedor));
        }
        [TestMethod]
        public void TestMethod4()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Cep = 5090500;

            Assert.IsTrue(fornecedorNegocio.ValidarCep(fornecedor));
        }
		public void TestMethod5()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Cidade = "Recife";

            Assert.IsTrue(fornecedorNegocio.ValidarCidade(fornecedor));
        }
		public void TestMethod6()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Email = "fab.teste@gmail.com";

            Assert.IsTrue(fornecedorNegocio.ValidarEmail(fornecedor));
        }
		public void TestMethod7()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Estado = "PE";

            Assert.IsTrue(fornecedorNegocio.ValidarEstado(fornecedor));
        }
		public void TestMethod8()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Bairro = "Boa Vista";

            Assert.IsTrue(fornecedorNegocio.ValidarBairro(fornecedor));
        }
		public void TestMethod9()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Logadouro = "Rua A";

            Assert.IsTrue(fornecedorNegocio.ValidarLogadouro(fornecedor));
        }
		public void TestMethod10()
        {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.Complemento = "N";

            Assert.IsTrue(fornecedorNegocio.ValidarComplemento(fornecedor));
        }
		
    }
}
